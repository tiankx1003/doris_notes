# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

FROM ubuntu:22.04 AS builder

# apt使用阿里云镜像
RUN sed -i 's@//.*archive.ubuntu.com@//mirrors.aliyun.com@g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y curl wget

# 安装基础依赖，指定默认python到python2
# 也可以提前下载之后COPY
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
    autoconf automake autopoint binutils-dev bison build-essential byacc bzip2 cmake \
    curl flex file gettext git libiberty-dev libncurses5-dev libncurses-dev libtool libtool-bin \
    make ninja-build openjdk-8-jdk patch pkg-config python2 python3 unzip vim zip \
    && ln -s /usr/bin/python2 /usr/bin/python

# TODO: clang-16 llvm

COPY tools/* /tmp/
# 下载安装mvn,nodejs,jdk17,ldb-toolchain
## maven 3.6.3
RUN mkdir -p /usr/share/maven /usr/share/maven/ref \
    # && wget -q -O /tmp/apache-maven.tar.gz https://doris-thirdparty-1308700295.cos.ap-beijing.myqcloud.com/tools/apache-maven-3.6.3-bin.tar.gz \
    && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \
    && rm -f /tmp/apache-maven.tar.gz \
    && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn

## nodejs
#RUN wget https://doris-thirdparty-1308700295.cos.ap-beijing.myqcloud.com/tools/node-v12.13.0-linux-x64.tar.gz \
#    -q -O /tmp/node-v12.13.0-linux-x64.tar.gz \
#    && cd /tmp/ && tar -xf node-v12.13.0-linux-x64.tar.gz \
RUN cd /tmp/ && tar -xf node-v12.13.0-linux-x64.tar.gz \
    && cp -r node-v12.13.0-linux-x64/* /usr/local/ \
    && rm -f /tmp/node-v12.13.0-linux-x64.tar.gz && rm -rf node-v12.13.0-linux-x64

## jdk17
#RUN wget https://doris-thirdparty-1308700295.cos.ap-beijing.myqcloud.com/tools/openjdk-17.0.2_linux-x64_bin.tar.gz \
#    -q -O /tmp/openjdk-17.0.2_linux-x64_bin.tar.gz \
#    && cd /tmp && tar -xzf openjdk-17.0.2_linux-x64_bin.tar.gz \
RUN cd /tmp && tar -xzf openjdk-17.0.2_linux-x64_bin.tar.gz \
    && cp -r jdk-17.0.2/ /usr/lib/jvm/ \
    && rm -f /tmp/openjdk-17.0.2_linux-x64_bin.tar.gz && rm -rf /tmp/jdk-17.0.2/

## ldb-toolchain
#RUN wget https://doris-community-bj-1308700295.cos.ap-beijing.myqcloud.com/tools/ldb_toolchain_gen.sh \
#    -q -O /tmp/ldb_toolchain_gen.sh \
#    && chmod +x /tmp/ldb_toolchain_gen.sh \
RUN chmod +x /tmp/ldb_toolchain_gen.sh \
    && bash /tmp/ldb_toolchain_gen.sh /var/local/ldb-toolchain/ \
    && rm -f /tmp/ldb_toolchain_gen.sh

# 环境变量
ENV REPOSITORY_URL="https://doris-thirdparty-hk-1308700295.cos.ap-hongkong.myqcloud.com/thirdparty" \
    DEFAULT_DIR="/var/local" \
    JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64" \
    PATH="/var/local/ldb-toolchain/bin/:$PATH"

# Install ccache
RUN wget https://doris-community-bj-1308700295.cos.ap-beijing.myqcloud.com/tools/ccache-4.8.tar.gz \
    -q -O /tmp/ccache-4.8.tar.gz \
    && cd /tmp/ && tar xzf ccache-4.8.tar.gz \
    && cd ccache-4.8 \
    && cmake -B _build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release . \
    && cmake --build _build --config Release -j 4 \
    && cp _build/ccache /var/local/ldb-toolchain/bin/

# Setup SSL certificates
RUN apt-get install -y ca-certificates \
    && update-ca-certificates

# Create .m2 directory for Maven repository
#RUN mkdir -p /root/.m2
#VOLUME ["/root/.m2/repository"]

# Clone latest source code, download and build third party
# 可以提前下载第三方依赖包随源码一起拷贝到${DEFAULT_DIR}/doris，再运行build-thirdparty.sh会验证、解压、编译
# 第三方依赖的编译耗时久，根据机器配置-j指定并行度，默认$(($(nproc) / 4 + 1))
# 失败率高，不易定位和解决
# 编译安装后的doris/thirdparty/installed会被拷贝到${DEFAULT_DIR}/thirdparty，之后删除doris源码目录
# 在使用构建好的docker镜像build.sh编译doris源码时，会从环境变量DORIS_THIRDPARTY直接加载
COPY doris ${DEFAULT_DIR}/doris
RUN cd ${DEFAULT_DIR}/doris \
    && /bin/bash -x thirdparty/build-thirdparty.sh -j 6 --clean \
    && rm -rf ${DEFAULT_DIR}/doris/thirdparty/src \
    && rm -rf ${DEFAULT_DIR}/doris-thirdparty.tar.gz \
    && rm -rf ${DEFAULT_DIR}/doris-thirdparty \
    && mkdir -p ${DEFAULT_DIR}/thirdparty \
    && mv ${DEFAULT_DIR}/doris/thirdparty/installed ${DEFAULT_DIR}/thirdparty/ \
    && rm -rf ${DEFAULT_DIR}/doris

# Clean up apt cache
RUN apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Squash all layers to reduce the image size
FROM scratch
COPY --from=builder / /
ENV JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64" \
    MAVEN_HOME="/usr/share/maven" \
    REPOSITORY_URL="https://doris-thirdparty-repo.bj.bcebos.com/thirdparty" \
    DEFAULT_DIR="/var/local" \
    PATH="/var/local/ldb-toolchain/bin/:/var/local/thirdparty/installed/bin/:$PATH" \
    DORIS_THIRDPARTY="/var/local/thirdparty"
WORKDIR /root

CMD ["/bin/bash"]
